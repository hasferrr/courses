The HtDF recipe consists of the following steps:
1. Signature, purpose and stub.
2. Define examples, wrap each in check-expect.
3. Template and inventory.
4. Code the function body.
5. Test and debug until correct

A data definition consists of four or five elements:
1. A possible "structure definition" (not until compound data)
2. A "type comment" that defines a new type name and describes how to form data of that type.
3. An "interpretation" that describes the correspondence between information and data.
4. One or more "examples" of the data.
5. A "template" for a 1 argument function operating on data of this type.

World program design is divided into two phases, each of which has sub-parts:
1. Domain analysis (use a piece of paper!)
    (a) "Sketch" program scenarios
    (b) Identify "constant" information
    (c) Identify "changing" information
    (d) Identify "big-bang options"
2. Build the actual program
    (a) "Constants" (based on item 1b above)
    (b) "Data definitions" using How To Design Data (HTDD) (based on item 1c above)
    (c) "Functions" using How To Design Functions (HtDF)
         i. "main" first (based on item 1c, item 1d and item 2b above)
        ii. "wish list" entries for big-bang handlers
    (d) Work through "wish list until done"
